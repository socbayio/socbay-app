<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <title>File Explorer</title>


  <!-- Bootstrap core CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <style>
    .bd-placeholder-img {
      font-size: 1.125rem;
      text-anchor: middle;
      -webkit-user-select: none;
      -moz-user-select: none;
      user-select: none;
    }

    @media (min-width: 768px) {
      .bd-placeholder-img-lg {
        font-size: 3.5rem;
      }
    }
  </style>


  <!-- Custom styles for this template -->
  <link href="/stylesheets/explorer.css" rel="stylesheet">
  <link href="/stylesheets/explorer.css" rel="stylesheet">

</head>

<body class="text-center">

  <main class="wrapper">
    <div class="file-info">
      <h1 class="h3 mb-3 fw-normal">Enter your order information</h1>

      <div class="form-floating">
        <input class="form-control" id="floatingInput" placeholder="CID" autocomplete="off">
        <label for="floatingInput">CID</label>
      </div>

      <button class="w-100 btn btn-lg btn-primary" onclick="getOrderInfo()">Get info</button>

    </div>
    <div>
      <div id="message"></div>
    </div>
    <table class="table table-hover">
      <table class="table">
        <thead id="tableHead">
        </thead>
        <tbody id="fileInfo">

        </tbody>
      </table>
    </table>
    <p class="mt-5 mb-3 text-muted">&copy; 2021</p>
  </main>

  <script src="/js/socbay_extension_dapp.js"></script>

  <script>
    async function getOrderInfo() {
      const cid = document.getElementById("floatingInput").value;
      const wsProvider = new WsProvider('wss://api.crust.network');
      const api = await ApiPromise.create({ provider: wsProvider, typesBundle: typesBundleForPolkadot });
      await api.isReadyOrError;
      const fileObj = await api.query.market.files(cid);
      const maybeFileUsedInfo = JSON.parse(JSON.stringify(fileObj));
      if (maybeFileUsedInfo) {
        const replicaCount = maybeFileUsedInfo[0].reported_replica_count;
        if (replicaCount === 0) {
          document.getElementById("message").innerHTML = "<b>The order is successfully registered by the network. Please wait for nodes to pick it up...</b>";
        } else {
          document.getElementById("message").innerHTML = "<b>The file is picked up. Number of replicas: " + replicaCount + "</b>";
        }
        document.getElementById("tableHead").innerHTML = '<tr><th scope="col">#</th><th scope="col">Info</th><th scope="col">Value</th></tr>';
        var valueFileInfo = "";
        var count = 0;
        Object.keys(maybeFileUsedInfo[0]).forEach(function (info) {
          if (!(typeof maybeFileUsedInfo[0][info] === "object")) {
            count++;
            valueFileInfo += '<tr><th scope="row">' + count + '</th><td>' + info + '</td><td>' + maybeFileUsedInfo[0][info] + '</td></tr>';
          }
        })
        document.getElementById("fileInfo").innerHTML = valueFileInfo;
      } else {
        document.getElementById("fileInfo").innerHTML = "";
        document.getElementById("tableHead").innerHTML = "";
        document.getElementById("message").innerHTML = "<b>This CID is not yet registered.</b>"
      }
    }
  </script>
</body>

</html>